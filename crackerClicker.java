
import java.awt.CardLayout;
import javax.swing.UIManager;
import java.util.concurrent.TimeUnit;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author brewe
 */
public class crackerClicker extends javax.swing.JFrame implements Money {

    /**
     * Creates new form crackerClicker
     */
    public crackerClicker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openShopButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        gamePanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        currentMoney = new javax.swing.JLabel();
        moneyPerClick = new javax.swing.JLabel();
        tokensBox = new javax.swing.JLabel();
        nextAchievementBox = new javax.swing.JLabel();
        numClicksLabel = new javax.swing.JLabel();
        shopPanel = new javax.swing.JPanel();
        crackerUpgrade1 = new javax.swing.JButton();
        toolUpgrade = new javax.swing.JButton();
        toolUpgradePrice = new javax.swing.JLabel();
        crackerUpgradePrice = new javax.swing.JLabel();
        crackerUpgradeName = new javax.swing.JLabel();
        crackerUpgradeAmount = new javax.swing.JLabel();
        toolUpgradeName = new javax.swing.JLabel();
        toolUpgradeAmount = new javax.swing.JLabel();
        tempUpgradePrice = new javax.swing.JLabel();
        tempUpgradeName = new javax.swing.JLabel();
        tempUpgradeMultiplier = new javax.swing.JLabel();
        tempUpgradeButton = new javax.swing.JButton();
        clickUpgradePrice = new javax.swing.JLabel();
        clickUpgradeName = new javax.swing.JLabel();
        clickUpgradeMultiplier = new javax.swing.JLabel();
        upgradeClickButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(350, 490));
        setResizable(false);

        openShopButton.setText("shop");
        openShopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openShopButtonActionPerformed(evt);
            }
        });

        mainPanel.setPreferredSize(new java.awt.Dimension(300, 400));
        mainPanel.setLayout(new java.awt.CardLayout());

        gamePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("addMoney");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gamePanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 190, 160));

        currentMoney.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentMoney.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentMoney.setText("$0");
        gamePanel.add(currentMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 180, 70));

        moneyPerClick.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        moneyPerClick.setText("$1 / click");
        gamePanel.add(moneyPerClick, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 350, 60));

        tokensBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tokensBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tokensBox.setText("Tokens: 0");
        gamePanel.add(tokensBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 350, 40));

        nextAchievementBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nextAchievementBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nextAchievementBox.setText("Next Achievement: Level 1, 10 clicks");
        gamePanel.add(nextAchievementBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 350, 40));

        numClicksLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numClicksLabel.setText("0 clicks");
        gamePanel.add(numClicksLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 350, -1));

        mainPanel.add(gamePanel, "gameCard");

        shopPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        crackerUpgrade1.setText("Upgrade Cracker");
        crackerUpgrade1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crackerUpgrade1ActionPerformed(evt);
            }
        });
        shopPanel.add(crackerUpgrade1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 180, 50));

        toolUpgrade.setText("Upgrade Tool");
        toolUpgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolUpgradeActionPerformed(evt);
            }
        });
        shopPanel.add(toolUpgrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 180, 50));

        toolUpgradePrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toolUpgradePrice.setText("$10");
        shopPanel.add(toolUpgradePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 180, 40));

        crackerUpgradePrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        crackerUpgradePrice.setText("$10");
        shopPanel.add(crackerUpgradePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 180, 40));

        crackerUpgradeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        crackerUpgradeName.setText("Cracker 1");
        shopPanel.add(crackerUpgradeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 180, 40));

        crackerUpgradeAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        crackerUpgradeAmount.setText("$5 / cracker");
        shopPanel.add(crackerUpgradeAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 180, 40));

        toolUpgradeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toolUpgradeName.setText("Tool Upgrade 1");
        shopPanel.add(toolUpgradeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 180, 40));

        toolUpgradeAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toolUpgradeAmount.setText("2x income");
        shopPanel.add(toolUpgradeAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 180, 40));

        tempUpgradePrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempUpgradePrice.setText("5 Tokens");
        shopPanel.add(tempUpgradePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 170, 40));

        tempUpgradeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempUpgradeName.setText("Temporary Boost Upgrade");
        shopPanel.add(tempUpgradeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 170, 40));

        tempUpgradeMultiplier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempUpgradeMultiplier.setText("2x income for 10 clicks");
        shopPanel.add(tempUpgradeMultiplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 170, 40));

        tempUpgradeButton.setText("Temporary Boost");
        tempUpgradeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempUpgradeButtonActionPerformed(evt);
            }
        });
        shopPanel.add(tempUpgradeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 170, 50));

        clickUpgradePrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clickUpgradePrice.setText("2 Tokens");
        shopPanel.add(clickUpgradePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 170, 40));

        clickUpgradeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clickUpgradeName.setText("Click Upgrade 1");
        shopPanel.add(clickUpgradeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 170, 40));

        clickUpgradeMultiplier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clickUpgradeMultiplier.setText("2x clicks");
        shopPanel.add(clickUpgradeMultiplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 170, 40));

        upgradeClickButton.setText("Upgrade Click Mult.");
        upgradeClickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradeClickButtonActionPerformed(evt);
            }
        });
        shopPanel.add(upgradeClickButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 170, 50));

        mainPanel.add(shopPanel, "shopCard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
            .addComponent(openShopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(openShopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (numClicks <= tempUpgradeEnd)
            currentMoneyValue = currentMoneyValue + (crackerValue * toolMultiplier * numPerClick * tempUpgradeValue);
        else
            currentMoneyValue = currentMoneyValue + (crackerValue * toolMultiplier * numPerClick);
        setMoney();
        
        numClicks+= numPerClick;
        numClicksLabel.setText(numClicks + " clicks");
        
        try {
            if(numClicks >= inventory.getAchievement().getNumClicks())
        {
            currentTokens += inventory.getAchievement().getNumTokens();
            tokensBox.setText("Tokens: " + currentTokens);
            inventory.nextAchievement();
            
            nextAchievementBox.setText("Next Achievement: " + inventory.getAchievement().getName() + ", " +
            inventory.getAchievement().getNumClicks() + " clicks");
            
        }
        }
        catch (Exception e){
            nextAchievementBox.setText("All achievements complete!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void toolUpgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolUpgradeActionPerformed
        try {
            if (currentMoneyValue >= shop.getTool(inventory.getCurrentTool()).getPrice()) {
                currentMoneyValue -= shop.getTool(inventory.getCurrentTool()).getPrice();
                toolMultiplier = ((Tool) shop.getTool(inventory.getCurrentTool())).getToolEfficiency();

                inventory.nextTool();
            }
        } catch (IndexOutOfBoundsException e) {
            toolUpgradePrice.setText("");
            toolUpgradeName.setText("No more tools");
            toolUpgradeAmount.setText("");
        } finally {
            setShopTool();
            setMoney();
        }
    }//GEN-LAST:event_toolUpgradeActionPerformed

    private void crackerUpgrade1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crackerUpgrade1ActionPerformed
        try {
            if (currentMoneyValue >= shop.getCracker(inventory.getCurrentCracker()).getPrice()) {
                currentMoneyValue -= shop.getCracker(inventory.getCurrentCracker()).getPrice();
                crackerValue = ((Cracker) shop.getCracker(inventory.getCurrentCracker())).getCrackerRevenue();

                inventory.nextCracker();
            }
        } catch (IndexOutOfBoundsException e) {
            crackerUpgradePrice.setText("");
            crackerUpgradeName.setText("No more crackers");
            crackerUpgradeAmount.setText("");
        } finally {
            setShopCracker();
            setMoney();
        }
    }//GEN-LAST:event_crackerUpgrade1ActionPerformed

    private void openShopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openShopButtonActionPerformed
        setShopCracker();
        setShopTool();

        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.next(mainPanel);
    }//GEN-LAST:event_openShopButtonActionPerformed

    private void upgradeClickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradeClickButtonActionPerformed
        try {
            if (currentTokens >= shop.getClickUpgrade(inventory.getCurrentClickUpgrade()).getPrice())
            {
                currentTokens -= shop.getClickUpgrade(inventory.getCurrentClickUpgrade()).getPrice();
                numPerClick = ((ClickUpgrade)shop.getClickUpgrade(inventory.getCurrentClickUpgrade())).getClickMultiplier();

                
                inventory.nextClickUpgrade();
            }
        }
        catch (Exception e)
        {
            
        }
        finally
        {
            setShopClickUpgrade();
            setTokens();
        }
    }//GEN-LAST:event_upgradeClickButtonActionPerformed

    private void tempUpgradeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempUpgradeButtonActionPerformed
        try {
            if (currentTokens >= shop.getTempUpgrade(inventory.getCurrentClickUpgrade()).getPrice())
            {
                currentTokens -= shop.getTempUpgrade(inventory.getCurrentClickUpgrade()).getPrice();
                tempUpgradeValue = ((TempUpgrade)shop.getTempUpgrade(inventory.getCurrentClickUpgrade())).getMultiplier();
                tempUpgradeEnd = numClicks + ((TempUpgrade)shop.getTempUpgrade(inventory.getCurrentTempUpgrade())).getLength();
                
                inventory.nextTempUpgrade();
            }
        }
        catch (Exception e)
        {
            
        }
        finally
        {
            setShopTempUpgrade();
            setTokens();
        }
    }//GEN-LAST:event_tempUpgradeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    private int crackerValue = 1;
    private long currentMoneyValue = 0;
    private int currentTokens = 0;
    
    //upgrade values
    private int toolMultiplier = 1;
    private int addedProductivity = 1;
    private int numPerClick = 1;
    
    private int numClicks = 0;
    private Inventory inventory = new Inventory();
    private static Shop shop = new Shop();
    
    private int tempUpgradeEnd = 0;
    private int tempUpgradeValue = 1;

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crackerClicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crackerClicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crackerClicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crackerClicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("UIManager Exception : " + e);
        }

        fillShop();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crackerClicker().setVisible(true);
            }
        });
    }
    
    @Override
    public void setMoney() {
        String money = ("$" + currentMoneyValue);
        if (currentMoneyValue >= 1000) {
            money = money.substring(0, money.length() - 3) + "," + money.substring(money.length() - 3);
        }
        if (currentMoneyValue >= 1000000) {
            money = money.substring(0, money.length() - 7) + "," + money.substring(money.length() - 7);
        }
        if (currentMoneyValue >= 1000000000) {
            money = money.substring(0, money.length() - 11) + "B";
                    }
        currentMoney.setText(money);
        moneyPerClick.setText("$" + crackerValue * toolMultiplier * addedProductivity + " / click" );
    }
    
    public void setTokens(){
        tokensBox.setText("Tokens: " + currentTokens);
    }
    
    private static void fillShop() {
        //add crackers
        shop.addCracker("Cracker 1", 10, 2);
        shop.addCracker("Cracker 2", 500, 5);

        //add tools
        shop.addTool("Tool 1", 200, 2);
        shop.addTool("Tool 2", 1000, 5);
        
        //add clickUpgrades
        shop.addClickUpgrade("Click Upgrade 1", 2, 2);
        shop.addClickUpgrade("Click Upgrade 2", 5, 3);
        shop.addClickUpgrade("Click Upgrade 3", 10, 5);
        
        //add tempUpgrades
        shop.addTempUpgrade("Temp Upgrade 1", 5, 10, 3);
        shop.addTempUpgrade("Temp Upgrade 2", 10, 20, 5);
    }

    private void setShopCracker() {
        try {
            crackerUpgradePrice.setText("$" + shop.getCracker(inventory.getCurrentCracker()).getPrice());
            crackerUpgradeName.setText(shop.getCracker(inventory.getCurrentCracker()).getName());
            crackerUpgradeAmount.setText("$" + ((Cracker) shop.getCracker(inventory.getCurrentCracker())).getCrackerRevenue() + " / cracker");
        } catch (IndexOutOfBoundsException e) {
            crackerUpgradePrice.setText("");
            crackerUpgradeName.setText("No more crackers");
            crackerUpgradeAmount.setText("");
        }
    }

    private void setShopTool() {
        try {
            toolUpgradePrice.setText("$" + shop.getTool(inventory.getCurrentTool()).getPrice());
            toolUpgradeName.setText(shop.getTool(inventory.getCurrentTool()).getName());
            toolUpgradeAmount.setText(((Tool) shop.getTool(inventory.getCurrentTool())).getToolEfficiency() + "x");
        } catch (IndexOutOfBoundsException e) {
            toolUpgradePrice.setText("");
            toolUpgradeName.setText("No more tools");
            toolUpgradeAmount.setText("");
        }
    }
    
    private void setShopClickUpgrade(){
        try {
            clickUpgradePrice.setText(shop.getClickUpgrade(inventory.getCurrentClickUpgrade()).getPrice() + " Tokens");
            clickUpgradeName.setText(shop.getClickUpgrade(inventory.getCurrentClickUpgrade()).getName());
            clickUpgradeMultiplier.setText(((ClickUpgrade)shop.getClickUpgrade(inventory.getCurrentClickUpgrade())).getClickMultiplier() + "x clicks");
        }
        catch (IndexOutOfBoundsException e){
            clickUpgradePrice.setText("");
            clickUpgradeName.setText("No more click upgrades");
            clickUpgradeMultiplier.setText("");
        }
    }
    
    private void setShopTempUpgrade(){
        try {
            tempUpgradePrice.setText(shop.getTempUpgrade(inventory.getCurrentClickUpgrade()).getPrice() + " Tokens");
            tempUpgradeName.setText(shop.getTempUpgrade(inventory.getCurrentClickUpgrade()).getName());
            tempUpgradeMultiplier.setText(((TempUpgrade)shop.getTempUpgrade(inventory.getCurrentClickUpgrade())).getMultiplier() + "x for " 
            + ((TempUpgrade)shop.getTempUpgrade(inventory.getCurrentClickUpgrade())).getLength() + " clicks");
        }
        catch (IndexOutOfBoundsException e){
            tempUpgradePrice.setText("");
            tempUpgradeName.setText("No more temp upgrades");
            tempUpgradeMultiplier.setText("");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel clickUpgradeMultiplier;
    private javax.swing.JLabel clickUpgradeName;
    private javax.swing.JLabel clickUpgradePrice;
    private javax.swing.JButton crackerUpgrade1;
    private javax.swing.JLabel crackerUpgradeAmount;
    private javax.swing.JLabel crackerUpgradeName;
    private javax.swing.JLabel crackerUpgradePrice;
    private javax.swing.JLabel currentMoney;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel moneyPerClick;
    private javax.swing.JLabel nextAchievementBox;
    private javax.swing.JLabel numClicksLabel;
    private javax.swing.JButton openShopButton;
    private javax.swing.JPanel shopPanel;
    private javax.swing.JButton tempUpgradeButton;
    private javax.swing.JLabel tempUpgradeMultiplier;
    private javax.swing.JLabel tempUpgradeName;
    private javax.swing.JLabel tempUpgradePrice;
    private javax.swing.JLabel tokensBox;
    private javax.swing.JButton toolUpgrade;
    private javax.swing.JLabel toolUpgradeAmount;
    private javax.swing.JLabel toolUpgradeName;
    private javax.swing.JLabel toolUpgradePrice;
    private javax.swing.JButton upgradeClickButton;
    // End of variables declaration//GEN-END:variables
}
